function G = gravload(rob,in2)
%% GRAVLOAD - Computation of the configuration dependent vector of gravitational load forces/torques for noname 
% ========================================================================= 
%    
%    G = gravload(rob,q) 
%    G = rob.gravload(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    configuration dependent vector of gravitational load forces/torques. 
%    
%  Input:: 
%    rob: robot object of noname specific class 
%    q:  5-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    G:  [5x1] vector of gravitational load forces/torques 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also inertia.
%    
    
% Copyright (C) 1993-2020, by Peter I. Corke 
% Copyright (C) 2012-2020, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    23-Apr-2020 23:24:20

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q1);
t3 = cos(q2);
t4 = cos(q3);
t5 = cos(q4);
t6 = cos(q5);
t7 = sin(q1);
t8 = sin(q2);
t9 = sin(q3);
t10 = sin(q4);
t11 = sin(q5);
t12 = t2.*t3.*(9.81e+2./1.0e+2);
t13 = t2.*t8.*(9.81e+2./1.0e+2);
t14 = t3.*t7.*(9.81e+2./1.0e+2);
t15 = t7.*t8.*(9.81e+2./1.0e+2);
t17 = t2.*t3.*1.7531451e+1;
t18 = t7.*t8.*1.7531451e+1;
t16 = -t15;
t19 = -t18;
t20 = t13+t14;
t21 = t12+t16;
t22 = t4.*t20;
t23 = t9.*t20;
t24 = t4.*t21;
t25 = t9.*t21;
t26 = -t23;
t27 = t22.*4.073e+1;
t28 = t23.*4.073e+1;
t32 = t23.*1.18117e+1;
t29 = t24.*4.073e+1;
t30 = t25.*4.073e+1;
t31 = -t28;
t33 = t24.*1.18117e+1;
t34 = -t32;
t35 = t22+t25;
t36 = t24+t26;
t39 = -t5.*(t23-t24);
t40 = -t10.*(t23-t24);
t45 = t5.*(t23-t24).*(-7.77e+2./1.0e+2);
t46 = t10.*(t23-t24).*(-7.77e+2./1.0e+2);
t49 = t5.*(t23-t24).*(-1.3209);
t37 = t5.*t35;
t38 = t10.*t35;
t41 = -t38;
t42 = t37.*(7.77e+2./1.0e+2);
t43 = t38.*(7.77e+2./1.0e+2);
t47 = t38.*1.3209;
t50 = t37+t40;
t54 = t11.*(t38+t5.*(t23-t24)).*(-4.57e+2./1.0e+2);
t55 = t6.*(t38+t5.*(t23-t24)).*(-4.57e+2./1.0e+2);
t56 = t6.*(t38+t5.*(t23-t24)).*(4.57e+2./1.0e+2);
t59 = t6.*(t38+t5.*(t23-t24)).*(-8.683e-1);
t44 = -t43;
t48 = -t47;
t51 = t39+t41;
t52 = t11.*t50.*(4.57e+2./1.0e+2);
t53 = t6.*t50.*(4.57e+2./1.0e+2);
t57 = t11.*t50.*8.683e-1;
t58 = -t57;
t60 = t53+t54;
t61 = t52+t56;
t62 = t6.*t60;
t63 = t11.*t60;
t64 = t6.*t61;
t65 = t11.*t61;
t66 = -t64;
t67 = t63.*(2.0./5.0);
t68 = t64.*(2.0./5.0);
t70 = t42+t46+t62+t65;
t74 = -t5.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2));
t75 = -t10.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2));
t76 = t10.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2));
t69 = -t68;
t71 = t44+t45+t63+t66;
t72 = t5.*t70;
t73 = t10.*t70;
t77 = t29+t31+t73+t74;
t78 = t27+t30+t72+t76;
t79 = t4.*(t28-t29-t73+t5.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2))).*(-2.0./5.0);
t80 = t9.*t78.*(2.0./5.0);
G = [t2.*1.0759608e+1+t17+t19+t33+t34+t48+t49+t58+t59+t67+t69+t79+t80+t3.*(t2.*t3.*7.62237e+1-t7.*t8.*7.62237e+1+t9.*t78-t4.*(t28-t29-t73+t5.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2)))).*(4.3e+1./1.0e+2)+t8.*(t2.*t8.*7.62237e+1+t3.*t7.*7.62237e+1+t4.*t78+t9.*(t28-t29-t73+t5.*(t43-t63+t64+t5.*(t23-t24).*(7.77e+2./1.0e+2)))).*(4.3e+1./1.0e+2),t17+t19+t33+t34+t48+t49+t58+t59+t67+t69+t79+t80,t33+t34+t48+t49+t58+t59+t67+t69,t48+t49+t58+t59+t67+t69,t58+t59];
