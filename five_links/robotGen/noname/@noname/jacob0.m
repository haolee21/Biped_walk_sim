function jacob0 = jacob0(rob,in2)
%% JACOB0 - Jacobian with respect to the base coordinate frame of the noname arm. 
% ========================================================================= 
%    
%    J0 = jacob0(rob,q) 
%    J0 = rob.jacob0(q) 
%    
%  Description:: 
%    Given a full set of joint variables the function 
%    computes the robot jacobian with respect to the base frame. 
%    
%  Input:: 
%    q:  5-element vector of generalized coordinates. 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    J0:  [6x5] Jacobian matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also fkine,jacobe.
%    
    
% Copyright (C) 1993-2020, by Peter I. Corke 
% Copyright (C) 2012-2020, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    22-Apr-2020 01:41:10

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q5);
t3 = sin(q5);
t4 = q3+q4+q5;
t5 = cos(t4);
t6 = q2+t4;
t7 = sin(t4);
t13 = t2.*(9.0./2.0e+1);
t14 = t3.*(9.0./2.0e+1);
t8 = cos(t6);
t9 = q1+t6;
t10 = sin(t6);
t15 = t5.*(9.0./2.0e+1);
t16 = t7.*(9.0./2.0e+1);
t11 = sin(t9);
t12 = cos(t9);
t17 = t8.*(9.0./2.0e+1);
t18 = t10.*(9.0./2.0e+1);
t24 = t13+t15;
t25 = t14+t16;
t19 = t12.*t13;
t20 = t11.*t13;
t21 = t12.*t14;
t22 = t11.*t14;
t23 = t2.*t11.*(-9.0./2.0e+1);
t27 = t18+t25;
t29 = t17+t24;
t26 = t19+t22;
t28 = t21+t23;
jacob0 = reshape([t12.*t27-t11.*t29,t11.*t27+t12.*t29,0.0,0.0,0.0,1.0,-t11.*t24+t12.*t25,t11.*t25+t12.*t24,0.0,0.0,0.0,1.0,t28,t26,0.0,0.0,0.0,1.0,t28,t26,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0],[6,5]);
