function G = gravload(rob,in2)
%% GRAVLOAD - Computation of the configuration dependent vector of gravitational load forces/torques for noname 
% ========================================================================= 
%    
%    G = gravload(rob,q) 
%    G = rob.gravload(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    configuration dependent vector of gravitational load forces/torques. 
%    
%  Input:: 
%    rob: robot object of noname specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    G:  [6x1] vector of gravitational load forces/torques 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also inertia.
%    
    
% Copyright (C) 1993-2020, by Peter I. Corke 
% Copyright (C) 2012-2020, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    27-Apr-2020 00:41:57

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
t2 = cos(q1);
t3 = cos(q2);
t4 = cos(q3);
t5 = cos(q4);
t6 = cos(q5);
t7 = cos(q6);
t8 = sin(q1);
t9 = sin(q2);
t10 = sin(q3);
t11 = sin(q4);
t12 = sin(q5);
t13 = sin(q6);
t14 = t2.*t3.*(9.81e+2./1.0e+2);
t15 = t2.*t9.*(9.81e+2./1.0e+2);
t16 = t3.*t8.*(9.81e+2./1.0e+2);
t17 = t8.*t9.*(9.81e+2./1.0e+2);
t19 = t2.*t3.*1.7531451e+1;
t20 = t8.*t9.*1.7531451e+1;
t18 = -t17;
t21 = -t20;
t22 = t15+t16;
t23 = t14+t18;
t24 = t4.*t22;
t25 = t10.*t22;
t26 = t4.*t23;
t27 = t10.*t23;
t28 = -t25;
t29 = t24.*4.073e+1;
t30 = t25.*4.073e+1;
t34 = t25.*1.18117e+1;
t31 = t26.*4.073e+1;
t32 = t27.*4.073e+1;
t33 = -t30;
t35 = t26.*1.18117e+1;
t36 = -t34;
t37 = t24+t27;
t38 = t26+t28;
t41 = -t5.*(t25-t26);
t42 = -t11.*(t25-t26);
t47 = t5.*(t25-t26).*(-7.77e+2./1.0e+2);
t48 = t11.*(t25-t26).*(-7.77e+2./1.0e+2);
t51 = t5.*(t25-t26).*(-1.3209);
t39 = t5.*t37;
t40 = t11.*t37;
t43 = -t40;
t44 = t39.*(7.77e+2./1.0e+2);
t45 = t40.*(7.77e+2./1.0e+2);
t49 = t40.*1.3209;
t52 = t39+t42;
t56 = -t12.*(t40+t5.*(t25-t26));
t57 = -t6.*(t40+t5.*(t25-t26));
t58 = t6.*(t40+t5.*(t25-t26));
t61 = t12.*(t40+t5.*(t25-t26)).*(-8.8e+1./2.5e+1);
t46 = -t45;
t50 = -t49;
t53 = t41+t43;
t54 = t12.*t52;
t55 = t6.*t52;
t63 = t58.*(-8.8e+1./2.5e+1);
t65 = t58.*(8.8e+1./2.5e+1);
t66 = t58.*(-4.18e+2./6.25e+2);
t59 = t54.*(8.8e+1./2.5e+1);
t60 = t55.*(8.8e+1./2.5e+1);
t62 = t54.*(4.18e+2./6.25e+2);
t67 = t55+t56;
t68 = t54+t58;
t64 = -t62;
t69 = t7.*t67.*(2.1e+1./2.0e+1);
t70 = t13.*t67.*(2.1e+1./2.0e+1);
t71 = t7.*t68.*(2.1e+1./2.0e+1);
t72 = t13.*t68.*(2.1e+1./2.0e+1);
t74 = t13.*t67.*1.365e-1;
t76 = t7.*t68.*1.365e-1;
t73 = -t72;
t75 = -t74;
t77 = -t76;
t78 = t70+t71;
t79 = t69+t73;
t80 = t7.*t78;
t81 = t13.*t78;
t82 = t7.*t79;
t83 = t13.*t79;
t85 = t80.*(1.3e+1./5.0e+1);
t84 = -t83;
t86 = -t85;
t87 = t83.*(1.3e+1./5.0e+1);
t88 = t60+t61+t81+t82;
t89 = t59+t65+t80+t84;
t90 = t6.*t88;
t91 = t12.*t88;
t92 = t6.*t89;
t93 = t12.*t89;
t94 = t91.*(2.0./5.0);
t95 = -t92;
t96 = t92.*(2.0./5.0);
t98 = t44+t48+t90+t93;
t102 = -t5.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2));
t103 = -t11.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2));
t104 = t11.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2));
t97 = -t96;
t99 = t46+t47+t91+t95;
t100 = t5.*t98;
t101 = t11.*t98;
t105 = t31+t33+t101+t102;
t106 = t29+t32+t100+t104;
t107 = t4.*(t30-t31-t101+t5.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2))).*(-2.0./5.0);
t108 = t10.*t106.*(2.0./5.0);
G = [t2.*8.287488+t19+t21+t35+t36+t50+t51+t64+t66+t75+t77+t86+t87+t94+t97+t107+t108+t3.*(t2.*t3.*7.62237e+1-t8.*t9.*7.62237e+1+t10.*t106-t4.*(t30-t31-t101+t5.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2)))).*(4.3e+1./1.0e+2)+t9.*(t2.*t9.*7.62237e+1+t3.*t8.*7.62237e+1+t4.*t106+t10.*(t30-t31-t101+t5.*(t45-t91+t92+t5.*(t25-t26).*(7.77e+2./1.0e+2)))).*(4.3e+1./1.0e+2),t19+t21+t35+t36+t50+t51+t64+t66+t75+t77+t86+t87+t94+t97+t107+t108,t35+t36+t50+t51+t64+t66+t75+t77+t86+t87+t94+t97,t50+t51+t64+t66+t75+t77+t86+t87+t94+t97,t64+t66+t75+t77+t86+t87,t75+t77];
