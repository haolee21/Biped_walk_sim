function Irow = inertia_row_1(rob,in2)
%% INERTIA_ROW_1 - Computation of the robot specific inertia matrix row for corresponding to joint 1 of 6. 
% ========================================================================= 
%    
%    Irow = inertia_row_1(rob,q) 
%    Irow = rob.inertia_row_1(q) 
%    
%  Description:: 
%    Given a full set of joint variables this function computes the 
%    inertia matrix row number 1 of 6 for noname. 
%    
%  Input:: 
%    rob: robot object of noname specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    Irow:  [1x6] row of the robot inertia matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2020, by Peter I. Corke 
% Copyright (C) 2012-2020, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    25-Apr-2020 05:34:18

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
t2 = cos(q2);
t3 = cos(q3);
t4 = cos(q4);
t5 = cos(q5);
t6 = cos(q6);
t7 = sin(q2);
t8 = sin(q3);
t9 = sin(q4);
t10 = sin(q5);
t11 = sin(q6);
t12 = t2.*(4.3e+1./1.0e+2);
t13 = t3.*t7.*(4.3e+1./1.0e+2);
t14 = t7.*t8.*(4.3e+1./1.0e+2);
t18 = t3.*t7.*1.75139e+1;
t19 = t7.*t8.*1.75139e+1;
t20 = t2.*7.68453e-1;
t22 = t7.*t8.*5.079031;
t15 = t12+2.0./5.0;
t23 = -t22;
t16 = t3.*t15;
t17 = t8.*t15;
t21 = -t16;
t24 = t16.*4.073e+1;
t25 = t17.*4.073e+1;
t27 = t13+t17;
t28 = t16.*1.18117e+1;
t26 = -t24;
t29 = t14+t21;
t30 = t4.*t27;
t31 = t9.*t27;
t32 = t4.*t29;
t33 = t9.*t29;
t35 = t30.*(7.77e+2./1.0e+2);
t36 = t31.*(7.77e+2./1.0e+2);
t40 = t31.*1.3209;
t34 = -t33;
t37 = -t35;
t38 = t32.*(7.77e+2./1.0e+2);
t39 = t33.*(7.77e+2./1.0e+2);
t41 = -t40;
t42 = t32.*1.3209;
t45 = t31+t32-2.0./5.0;
t43 = -t42;
t44 = t30+t34;
t48 = t5.*t45;
t49 = t10.*t45;
t46 = t5.*t44;
t47 = t10.*t44;
t50 = -t49;
t54 = t48.*(8.8e+1./2.5e+1);
t55 = t49.*(8.8e+1./2.5e+1);
t58 = t48.*(4.18e+2./6.25e+2);
t51 = t46.*(8.8e+1./2.5e+1);
t52 = t47.*(8.8e+1./2.5e+1);
t56 = t47.*(4.18e+2./6.25e+2);
t59 = -t58;
t60 = t46+t50;
t61 = t47+t48-1.3e+1./5.0e+1;
t53 = -t51;
t57 = -t56;
t62 = t11.*t60.*(2.1e+1./2.0e+1);
t63 = t6.*t60.*(2.1e+1./2.0e+1);
t65 = t11.*t60.*1.365e-1;
t66 = t11.*t61.*(2.1e+1./2.0e+1);
t68 = t6.*t61.*(2.1e+1./2.0e+1);
t69 = t6.*t61.*1.365e-1;
t64 = -t63;
t67 = -t65;
t70 = -t69;
t72 = -t6.*(t63-t66);
t73 = -t11.*(t63-t66);
t74 = t62+t68-1.365e-1;
t75 = t11.*(t63-t66).*(-1.3e+1./5.0e+1);
t76 = t11.*(t63-t66).*(1.3e+1./5.0e+1);
t71 = t64+t66;
t77 = t6.*t74;
t78 = t11.*t74;
t79 = -t78;
t80 = t77.*(1.3e+1./5.0e+1);
t83 = -t5.*(t51-t55+t78+t6.*(t63-t66));
t84 = -t10.*(t51-t55+t78+t6.*(t63-t66));
t85 = t10.*(t51-t55+t78+t6.*(t63-t66)).*(-2.0./5.0);
t86 = t52+t54+t73+t77-4.18e+2./6.25e+2;
t87 = t10.*(t51-t55+t78+t6.*(t63-t66)).*(2.0./5.0);
t81 = -t80;
t82 = t53+t55+t72+t79;
t88 = t5.*t86;
t89 = t10.*t86;
t90 = -t89;
t91 = t88.*(2.0./5.0);
t94 = -t9.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)));
t95 = -t4.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)));
t96 = t4.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)));
t97 = t36+t38+t84+t88-1.3209;
t92 = -t91;
t93 = t37+t39+t83+t90;
t98 = t9.*t97;
t99 = t4.*t97;
t100 = t18+t25+t96+t98;
t102 = t19+t26+t94+t99-1.18117e+1;
t103 = t3.*(-t19+t24-t99+t9.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)))+1.18117e+1).*(-2.0./5.0);
t104 = t3.*(-t19+t24-t99+t9.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)))+1.18117e+1).*(2.0./5.0);
t101 = t8.*t100.*(2.0./5.0);
Irow = [t20+t23+t28+t41+t43+t57+t59+t67+t70+t76+t81+t87+t92+t101+t104+t7.*(t7.*3.3411+t3.*t100-t8.*(-t19+t24-t99+t9.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)))+1.18117e+1)).*(4.3e+1./1.0e+2)+t12.*(t2.*3.3411+t8.*t100+t3.*(-t19+t24-t99+t9.*(t35-t39+t89+t5.*(t51-t55+t78+t6.*(t63-t66)))+1.18117e+1)+1.7871)+4.408548,t20+t23+t28+t41+t43+t57+t59+t67+t70+t76+t81+t87+t92+t101+t104+4.205796,t23+t28+t41+t43+t57+t59+t67+t70+t76+t81+t87+t92+3.794763,t41+t43+t57+t59+t67+t70+t76+t81+t87+t92+3.6937e-1,t57+t59+t67+t70+t76+t81+1.44817e-1,t67+t70+1.7745e-2];
