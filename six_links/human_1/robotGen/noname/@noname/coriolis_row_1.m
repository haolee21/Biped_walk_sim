function Crow = coriolis_row_1(rob,in2,in3)
%% CORIOLIS_ROW_1 - Computation of the robot specific Coriolis matrix row for joint 1 of 6. 
% ========================================================================= 
%    
%    Crow = coriolis_row_1(rob,q,qd) 
%    Crow = rob.coriolis_row_1(q,qd) 
%    
%  Description:: 
%    Given a full set of joint variables and their first order temporal derivatives this function computes the 
%    Coriolis matrix row number 1 of 6 for noname. 
%    
%  Input:: 
%    rob: robot object of noname specific class 
%    qd:  6-element vector of generalized 
%    q:  6-element vector of generalized 
%    
%  Output:: 
%    Crow:  [1x6] row of the robot Coriolis matrix 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function. 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also coriolis.
%    
    
% Copyright (C) 1993-2020, by Peter I. Corke 
% Copyright (C) 2012-2020, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 8.5.
%    28-Apr-2020 10:49:05

q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
qd1 = in3(:,1);
qd2 = in3(:,2);
qd3 = in3(:,3);
qd4 = in3(:,4);
qd5 = in3(:,5);
qd6 = in3(:,6);
t2 = sin(q2);
t3 = sin(q3);
t4 = sin(q5);
t5 = sin(q6);
t6 = q2+q3;
t7 = q3+q4;
t8 = q5+q6;
t9 = q4+t6;
t10 = q5+t7;
t11 = sin(t6);
t12 = sin(t7);
t13 = sin(t8);
t15 = t7+t8;
t24 = qd5.*t4.*3.7672e-1;
t28 = qd6.*t5.*3.549e-2;
t36 = qd3.*t3.*4.72468;
t62 = qd2.*t2.*9.896493;
t14 = q5+t9;
t16 = sin(t9);
t17 = sin(t10);
t18 = t8+t9;
t20 = sin(t15);
t22 = qd5.*t13.*5.46e-2;
t23 = qd6.*t13.*5.46e-2;
t27 = -t24;
t35 = -t28;
t43 = qd1.*t12.*1.25956;
t44 = qd2.*t12.*1.25956;
t45 = qd3.*t12.*1.25956;
t46 = qd4.*t12.*1.25956;
t47 = -t36;
t68 = qd1.*t11.*5.079031;
t69 = qd2.*t11.*5.079031;
t70 = qd3.*t11.*5.079031;
t71 = -t62;
t19 = sin(t14);
t21 = sin(t18);
t25 = -t22;
t26 = -t23;
t29 = qd1.*t20.*5.46e-2;
t30 = qd2.*t20.*5.46e-2;
t31 = qd3.*t20.*5.46e-2;
t32 = qd4.*t20.*5.46e-2;
t33 = qd5.*t20.*5.46e-2;
t34 = qd6.*t20.*5.46e-2;
t48 = qd1.*t17.*3.7672e-1;
t49 = qd2.*t17.*3.7672e-1;
t50 = qd3.*t17.*3.7672e-1;
t51 = qd4.*t17.*3.7672e-1;
t52 = qd5.*t17.*3.7672e-1;
t53 = -t43;
t54 = -t44;
t55 = -t45;
t56 = -t46;
t83 = -t68;
t84 = -t69;
t85 = -t70;
t92 = qd1.*t16.*1.354027;
t93 = qd2.*t16.*1.354027;
t94 = qd3.*t16.*1.354027;
t95 = qd4.*t16.*1.354027;
t37 = -t29;
t38 = -t30;
t39 = -t31;
t40 = -t32;
t41 = -t33;
t42 = -t34;
t57 = -t48;
t58 = -t49;
t59 = -t50;
t60 = -t51;
t61 = -t52;
t63 = qd1.*t19.*4.04974e-1;
t64 = qd2.*t19.*4.04974e-1;
t65 = qd3.*t19.*4.04974e-1;
t66 = qd4.*t19.*4.04974e-1;
t67 = qd5.*t19.*4.04974e-1;
t72 = qd1.*t21.*5.8695e-2;
t73 = qd2.*t21.*5.8695e-2;
t74 = qd3.*t21.*5.8695e-2;
t75 = qd4.*t21.*5.8695e-2;
t76 = qd5.*t21.*5.8695e-2;
t77 = qd6.*t21.*5.8695e-2;
t96 = -t92;
t97 = -t93;
t98 = -t94;
t99 = -t95;
t78 = -t63;
t79 = -t64;
t80 = -t65;
t81 = -t66;
t82 = -t67;
t86 = -t72;
t87 = -t73;
t88 = -t74;
t89 = -t75;
t90 = -t76;
t91 = -t77;
Crow = [t25+t26+t27+t35+t39+t40+t41+t42+t47+t55+t56+t59+t60+t61+t71+t79+t80+t81+t82+t84+t85+t87+t88+t89+t90+t91+t97+t98+t99,t25+t26+t27+t35+t39+t40+t41+t42+t47+t55+t56+t59+t60+t61+t71+t78+t79+t80+t81+t82+t83+t84+t85+t86+t87+t88+t89+t90+t91+t96+t97+t98+t99-qd1.*t2.*9.896493,t25+t26+t27+t35+t37+t38+t39+t40+t41+t42+t47+t53+t54+t55+t56+t57+t58+t59+t60+t61+t78+t79+t80+t81+t82+t83+t84+t85+t86+t87+t88+t89+t90+t91+t96+t97+t98+t99-qd1.*t3.*4.72468-qd2.*t3.*4.72468,t25+t26+t27+t35+t37+t38+t39+t40+t41+t42+t53+t54+t55+t56+t57+t58+t59+t60+t61+t78+t79+t80+t81+t82+t86+t87+t88+t89+t90+t91+t96+t97+t98+t99,t25+t26+t27+t35+t37+t38+t39+t40+t41+t42+t57+t58+t59+t60+t61+t78+t79+t80+t81+t82+t86+t87+t88+t89+t90+t91-qd1.*t4.*3.7672e-1-qd2.*t4.*3.7672e-1-qd3.*t4.*3.7672e-1-qd4.*t4.*3.7672e-1-qd1.*t13.*5.46e-2-qd2.*t13.*5.46e-2-qd3.*t13.*5.46e-2-qd4.*t13.*5.46e-2,(t5.*2.6e+1+t13.*4.0e+1+t20.*4.0e+1+t21.*4.3e+1).*(qd1+qd2+qd3+qd4+qd5+qd6).*(-1.365e-3)];
