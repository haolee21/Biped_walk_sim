function [c,ceq,gradc,gradceq]=grf_cons_d(x,Fy_toe,p)

%% number of constraints: phase1_idx (toe-off) + half of total (prepare heel strike)
numCon2 = p.phase1_idx-1+size(x,2)-floor(size(x,2)/2);
numCon4 = size(x,2)-floor(size(x,2)/2);

% equality constraint



%need average
grf_toe_c2 = zeros(numCon2,1);
grf_heel_c2 = zeros(numCon2,1);
grf_toe_c4 = zeros(numCon4,1);
grf_heel_c4 = zeros(numCon4,1);


dgrf_toe_c2 = zeros(size(x,1),size(x,2),size(grf_toe_c2,1));
dgrf_heel_c2 = zeros(size(x,1),size(x,2),size(grf_heel_c2,1));
dgrf_toe_c4 = zeros(size(x,1),size(x,2),size(grf_toe_c4,1));
dgrf_heel_c4 = zeros(size(x,1),size(x,2),size(grf_heel_c4,1));
dgrf_toe_c2_fy = zeros(length(Fy_toe),size(grf_toe_c2,1));
i_cons2=1;
i_cons4=1;
for i=1:size(x,2)-1 %we only have totT-1 constraints since all velocity is generated by (q2-q1)/sampT
    
    if(i<p.phase1_idx-1) || (i>=floor((p.gaitT/p.sampT+1)/2))
        q1 = x(1:p.numJ,i);
        q2 = x(1:p.numJ,i+1);
        q = (q1+q2)/2;
        dq = (q2-q1)/p.sampT;
        fx_toe1 = x(2*p.numJ+1,i);
        fx_toe2 = x(2*p.numJ+1,i+1);
        fx_toe = (fx_toe1+fx_toe2)/2;
        fx_heel1 = x(2*p.numJ+2,i);
        fx_heel2 = x(2*p.numJ+2,i+1);
        fx_heel =(fx_heel1+fx_heel2)/2;
        if(i>p.phase1_idx)  % we average 2 fx
            toe_flag = 0;
            heel_flag=0;
            
            
            if(toePos_y(q.')<p.toe_th)
                grf_toe_c2(i_cons2,1)=Grf_toe_c2(q.',dq.',fx_toe,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                toe_flag=1;
            else
                grf_toe_c2(i_cons2,1)=fx_toe^2;
            end
            
            if(heelPos_y(q.')<p.toe_th)
                grf_heel_c2(i_cons2,1)=Grf_heel_c2(q.',dq.',fx_heel,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                heel_flag=1;
            else
                grf_heel_c2(i_cons2,1)=fx_heel^2;
            end
            grf_toe_c4(i_cons4,1) = Grf_toe_c4(q.',dq.',fx_toe);
            grf_heel_c4(i_cons4,1)=Grf_heel_c4(q.',dq.',fx_heel);
            
            if(nargout>2)
                if(toe_flag==1)
                    dgrf_toe_c2(1:p.numJ,i,i_cons2)=reshape(dgrf_toe_c2(1:p.numJ,i,i_cons2),[p.numJ,1])+dGrf_toe_c2_dq1(q.',dq.',fx_toe,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                    dgrf_toe_c2(1:p.numJ,i+1,i_cons2)=reshape(dgrf_toe_c2(1:p.numJ,i+1,i_cons2),[p.numJ,1])+dGrf_toe_c2_dq2(q.',dq.',fx_toe,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                    dgrf_toe_c2(2*p.numJ+1,i,i_cons2)=dgrf_toe_c2(2*p.numJ+1,i,i_cons2)+0.5*dGrf_toe_c2_dfx(q.',dq.',fx_toe,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                    dgrf_toe_c2(2*p.numJ+1,i+1,i_cons2)=dgrf_toe_c2(2*p.numJ+1,i+1,i_cons2)+0.5*dGrf_toe_c2_dfx(q.',dq.',fx_toe,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                else
                    dgrf_toe_c2(2*p.numJ+1,i,i_cons2)=dgrf_toe_c2(2*p.numJ+1,i,i_cons2)+fx_toe;
                    dgrf_toe_c2(2*p.numJ+1,i+1,i_cons2)=dgrf_toe_c2(2*p.numJ+1,i+1,i_cons2)+fx_toe;
                end
                if(heel_flag==1)
                    dgrf_heel_c2(1:p.numJ,i,i_cons2)=reshape(dgrf_heel_c2(1:p.numJ,i,i_cons2),[p.numJ,1])+dGrf_heel_c2_dq1(q.',dq.',fx_heel,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                    dgrf_heel_c2(1:p.numJ,i+1,i_cons2)=reshape(dgrf_heel_c2(1:p.numJ,i+1,i_cons2),[p.numJ,1])+dGrf_heel_c2_dq2(q.',dq.',fx_heel,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                    dgrf_heel_c2(2*p.numJ+2,i,i_cons2)=dgrf_heel_c2(2*p.numJ+2,i,i_cons2)+0.5*dGrf_heel_c2_dfx(q.',dq.',fx_heel,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                    dgrf_heel_c2(2*p.numJ+2,i+1,i_cons2)=dgrf_heel_c2(2*p.numJ+2,i,i_cons2)+0.5*dGrf_heel_c2_dfx(q.',dq.',fx_heel,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                else
                    dgrf_heel_c2(2*p.numJ+2,i,i_cons2)=dgrf_heel_c2(2*p.numJ+2,i,i_cons2)+fx_heel;
                    dgrf_heel_c2(2*p.numJ+2,i+1,i_cons2)=dgrf_heel_c2(2*p.numJ+2,i+1,i_cons2)+fx_heel;
                    
                end
                dgrf_toe_c4(1:p.numJ,i,i_cons4)    =dgrf_toe_c4(1:p.numJ,i,i_cons4)+dGrf_toe_c4_q1(q.',dq.',fx_toe,p.sampT);
                dgrf_toe_c4(1:p.numJ,i+1,i_cons4)  =dgrf_toe_c4(1:p.numJ,i+1,i_cons4)+dGrf_toe_c4_q2(q.',dq.',fx_toe,p.sampT);
                dgrf_toe_c4(2*p.numJ+1,i,i_cons4)  =dgrf_toe_c4(2*p.numJ+1,i,i_cons4)+dGrf_toe_c4_F(q.',dq.')*0.5;
                dgrf_toe_c4(2*p.numJ+1,i+1,i_cons4)=dgrf_toe_c4(2*p.numJ+1,i+1,i_cons4)+dGrf_toe_c4_F(q.',dq.')*0.5;
                
                dgrf_heel_c4(1:p.numJ,i,i_cons4)=dgrf_heel_c4(1:p.numJ,i,i_cons4)+dGrf_heel_c4_q1(q.',dq.',fx_heel,p.sampT);
                dgrf_heel_c4(1:p.numJ,i+1,i_cons4)=dgrf_heel_c4(1:p.numJ,i+1,i_cons4)+dGrf_heel_c4_q2(q.',dq.',fx_heel,p.sampT);
                dgrf_heel_c4(2*p.numJ+2,i,i_cons4)=dgrf_heel_c4(2*p.numJ+2,i,i_cons4)+dGrf_heel_c4_F(q.',dq.')*0.5;
                dgrf_heel_c4(2*p.numJ+2,i+1,i_cons4)=dgrf_heel_c4(2*p.numJ+2,i+1,i_cons4)+dGrf_heel_c4_F(q.',dq.')*0.5;
                
            end
            
            
            
            i_cons2 = i_cons2+1;
            i_cons4 = i_cons4+1;
        elseif(i<p.phase1_idx-1)
            fy_toe1 = Fy_toe(i,1);
            fy_toe2 = Fy_toe(i+1,1);
            fy_toe = 0.5*(fy_toe1+fy_toe2);
            grf_toe_c2(i_cons2,1)=fx_toe^2-p.us^2*fy_toe^2;
            grf_heel_c2(i_cons2,1)=fx_heel^2;
            
            if(nargout>2)
                dgrf_toe_c2(p.numJ*2+1,i,i_cons2) = dgrf_toe_c2(p.numJ*2+1,i,i_cons2)+fx_toe;
                dgrf_toe_c2(p.numJ*2+1,i+1,i_cons2) = dgrf_toe_c2(p.numJ*2+1,i+1,i_cons2)+fx_toe;
                dgrf_toe_c2_fy(i,i_cons2)=-p.us^2*fy_toe;
                dgrf_toe_c2_fy(i+1,i_cons2)=-p.us^2-fy_toe;
                
                dgrf_heel_c2(p.numJ*2+2,i,i_cons2)=dgrf_heel_c2(p.numJ*2+2,i,i_cons2)+fx_heel;
                dgrf_heel_c2(p.numJ*2+2,i+1,i_cons2)=dgrf_heel_c2(p.numJ*2+2,i+1,i_cons2)+fx_heel;
            end
            i_cons2 = i_cons2+1;
            
        end
        
        
        
        
        
        
    end
    
    
    
    
    
    
    
end
% while grf_toe_c2 does not constraint i<p.phase1_idx, grf_heel_c2 should
% constraint it





c =  [grf_toe_c2;
    grf_heel_c2;
    grf_toe_c4;
    grf_heel_c4];
gradc=[reshape(dgrf_toe_c2,[size(x,1)*size(x,2),size(dgrf_toe_c2,3)]),...
    reshape(dgrf_heel_c2,[size(x,1)*size(x,2),size(dgrf_heel_c2,3)]),...
    reshape(dgrf_toe_c4, [size(x,1)*size(x,2),size(dgrf_toe_c4,3)]),...
    reshape(dgrf_heel_c4,[size(x,1)*size(x,2),size(dgrf_heel_c4,3)])];

gradc = [gradc;  [dgrf_toe_c2_fy, zeros(length(Fy_toe),size(gradc,2)-size(grf_toe_c2,1))]];

ceq = [];
gradceq=[];


end