function [c,ceq,gradc,gradceq]=grf_cons_d(x,p)
%%

% equality constraint



%need average
grf_toe_c2_1 = zeros(p.phase1_idx,1);
grf_toe_c2_2 = zeros(size(x,2)-p.phase2_idx,1);
grf_heel_c2_2 = zeros(size(x,2)-p.phase2_idx,1);


grf_toe_c4_2 = zeros(size(x,2)-p.phase2_idx,1);
grf_heel_c4_2 = zeros(size(x,2)-p.phase2_idx,1);


dgrf_toe_c2_1 = zeros(size(x,1),size(x,2),size(grf_toe_c2_1,1));
dgrf_toe_c2_2 = zeros(size(x,1),size(x,2),size(grf_toe_c2_2,1));
dgrf_heel_c2_2 = zeros(size(x,1),size(x,2),size(grf_heel_c2_2,1));
dgrf_toe_c4_2 = zeros(size(x,1),size(x,2),size(grf_toe_c4_2,1));
dgrf_heel_c4_2 = zeros(size(x,1),size(x,2),size(grf_heel_c4_2,1));

i_cons1=1;
i_cons2=1;

for i=1:size(x,2)-1 %we only have totT-1 constraints since all velocity is generated by (q2-q1)/sampT
    q1 = x(1:p.numJ,i);
    q2 = x(1:p.numJ,i+1);
    q = (q1+q2)/2;
    dq = (q2-q1)/p.sampT;
    fx_toe11 = x(2*p.numJ+1,i);
    fy_toe11 = x(2*p.numJ+3,i);
    fx_toe12 = x(2*p.numJ+1,i+1);
    fy_toe12 = x(2*p.numJ+3,i+1);
    
    fx_toe1 = (fx_toe11+fx_toe12)*0.5;
    fy_toe1 = (fy_toe11+fy_toe12)*0.5;
    
    fx_toe21 = x(2*p.numJ+1,i);
    fx_toe22 = x(2*p.numJ+1,i+1);
    fx_heel21 = x(2*p.numJ+2,i);
    fx_heel22 = x(2*p.numJ+2,i+1);
    
    fx_toe2 = (fx_toe21+fx_toe22)*0.5;
    fx_heel2 = (fx_heel21+fx_heel22)*0.5;
    
    if(i>=p.phase2_idx)
        toe_flag = 0;
        heel_flag=0;
        if(toePos_y(q.')<p.toe_th)
            grf_toe_c2_2(i_cons2,1)=Grf_toe_c2(q.',dq.',fx_toe2,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
            toe_flag=1;
        else
            grf_toe_c2_2(i_cons2,1)=fx_toe2^2;
        end
        if(heelPos_y(q.')<p.toe_th)
            grf_heel_c2_2(i_cons2,1)=Grf_heel_c2(q.',dq.',fx_heel2,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
            heel_flag=1;
        else
            grf_heel_c2_2(i_cons2,1)=fx_heel2^2;
        end
        grf_toe_c4_2(i_cons2,1) = Grf_toe_c4(q.',dq.',fx_toe2);
        grf_heel_c4_2(i_cons2,1)=Grf_heel_c4(q.',dq.',fx_heel2);
        
        if(nargout>2)
            if(toe_flag==1)
                dgrf_toe_c2_2(1:p.numJ,i,i_cons2)=reshape(dgrf_toe_c2_2(1:p.numJ,i,i_cons2),[p.numJ,1])+dGrf_toe_c2_dq1(q.',dq.',fx_toe2,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                dgrf_toe_c2_2(1:p.numJ,i+1,i_cons2)=reshape(dgrf_toe_c2_2(1:p.numJ,i+1,i_cons2),[p.numJ,1])+dGrf_toe_c2_dq2(q.',dq.',fx_toe2,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                
                dgrf_toe_c2_2(2*p.numJ+1,i,i_cons2)=dgrf_toe_c2_2(2*p.numJ+1,i,i_cons2)+0.5*dGrf_toe_c2_dfx(q.',dq.',fx_toe2,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
                dgrf_toe_c2_2(2*p.numJ+1,i+1,i_cons2)=dgrf_toe_c2_2(2*p.numJ+1,i+1,i_cons2)+0.5*dGrf_toe_c2_dfx(q.',dq.',fx_toe2,p.toe_th,p.k,p.cmax_toe,p.dmax,p.us,p.sampT);
            else
                dgrf_toe_c2_2(2*p.numJ+1,i,i_cons2)=dgrf_toe_c2_2(2*p.numJ+1,i,i_cons2)+fx_toe2;
                dgrf_toe_c2_2(2*p.numJ+1,i+1,i_cons2)=dgrf_toe_c2_2(2*p.numJ+1,i+1,i_cons2)+fx_toe2;
            end
            if(heel_flag==1)
                dgrf_heel_c2_2(1:p.numJ,i,i_cons2)=reshape(dgrf_heel_c2_2(1:p.numJ,i,i_cons2),[p.numJ,1])+dGrf_heel_c2_dq1(q.',dq.',fx_heel2,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                dgrf_heel_c2_2(1:p.numJ,i+1,i_cons2)=reshape(dgrf_heel_c2_2(1:p.numJ,i+1,i_cons2),[p.numJ,1])+dGrf_heel_c2_dq2(q.',dq.',fx_heel2,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                
                dgrf_heel_c2_2(2*p.numJ+2,i,i_cons2)=dgrf_heel_c2_2(2*p.numJ+2,i,i_cons2)+0.5*dGrf_heel_c2_dfx(q.',dq.',fx_heel2,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
                dgrf_heel_c2_2(2*p.numJ+2,i+1,i_cons2)=dgrf_heel_c2_2(2*p.numJ+2,i+1,i_cons2)+0.5*dGrf_heel_c2_dfx(q.',dq.',fx_heel2,p.toe_th,p.k,p.cmax_heel,p.dmax,p.us,p.sampT);
            else
                dgrf_heel_c2_2(2*p.numJ+2,i,i_cons2)=dgrf_heel_c2_2(2*p.numJ+2,i,i_cons2)+fx_heel2;
                dgrf_heel_c2_2(2*p.numJ+2,i+1,i_cons2)=dgrf_heel_c2_2(2*p.numJ+2,i+1,i_cons2)+fx_heel2;
            end
            
            dgrf_toe_c4_2(1:p.numJ,i,i_cons2)    =dgrf_toe_c4_2(1:p.numJ,i,i_cons2)+dGrf_toe_c4_q1(q.',dq.',fx_toe2,p.sampT);
            dgrf_toe_c4_2(1:p.numJ,i+1,i_cons2)  =dgrf_toe_c4_2(1:p.numJ,i+1,i_cons2)+dGrf_toe_c4_q2(q.',dq.',fx_toe2,p.sampT);
            dgrf_toe_c4_2(2*p.numJ+1,i,i_cons2)  =dgrf_toe_c4_2(2*p.numJ+1,i,i_cons2)+dGrf_toe_c4_F(q.',dq.')*0.5;
            dgrf_toe_c4_2(2*p.numJ+1,i+1,i_cons2)=dgrf_toe_c4_2(2*p.numJ+1,i+1,i_cons2)+dGrf_toe_c4_F(q.',dq.')*0.5;
            
            dgrf_heel_c4_2(1:p.numJ,i,i_cons2)=dgrf_heel_c4_2(1:p.numJ,i,i_cons2)+dGrf_heel_c4_q1(q.',dq.',fx_heel2,p.sampT);
            dgrf_heel_c4_2(1:p.numJ,i+1,i_cons2)=dgrf_heel_c4_2(1:p.numJ,i+1,i_cons2)+dGrf_heel_c4_q2(q.',dq.',fx_heel2,p.sampT);
            dgrf_heel_c4_2(2*p.numJ+2,i,i_cons2)=dgrf_heel_c4_2(2*p.numJ+2,i,i_cons2)+dGrf_heel_c4_F(q.',dq.')*0.5;
            dgrf_heel_c4_2(2*p.numJ+2,i+1,i_cons2)=dgrf_heel_c4_2(2*p.numJ+2,i+1,i_cons2)+dGrf_heel_c4_F(q.',dq.')*0.5;
            
        end
        
        i_cons2 = i_cons2+1;
        
    elseif(i<=p.phase1_idx)
        grf_toe_c2_1(i_cons1,1)=fx_toe1^2-p.us^2*fy_toe1^2;
        
        if(nargout>2)
            dgrf_toe_c2_1(p.numJ*2+1,i,i_cons1) = dgrf_toe_c2_1(p.numJ*2+1,i,i_cons1)+fx_toe1;
            dgrf_toe_c2_1(p.numJ*2+1,i+1,i_cons1) = dgrf_toe_c2_1(p.numJ*2+1,i+1,i_cons1)+fx_toe1;
            dgrf_toe_c2_1(p.numJ*2+3,i,i_cons1)=dgrf_toe_c2_1(p.numJ*2+3,i,i_cons1)-p.us^2*fy_toe1;
            dgrf_toe_c2_1(p.numJ*2+3,i+1,i_cons1)=dgrf_toe_c2_1(p.numJ*2+3,i+1,i_cons1)-p.us^2*fy_toe1;
            
        end
        i_cons1 = i_cons1+1;
    end
    
end
% while grf_toe_c2 does not constraint i<p.phase1_idx, grf_heel_c2 should
% constraint it

c =  [grf_toe_c2_2;
    grf_heel_c2_2;
    grf_toe_c4_2;
    grf_heel_c4_2;
    grf_toe_c2_1];
gradc_all = {dgrf_toe_c2_2,dgrf_heel_c2_2,dgrf_toe_c4_2,dgrf_heel_c4_2,dgrf_toe_c2_1};
gradc = cat(3,gradc_all{:});

gradc_q = gradc(1:p.numJ,2:end-1,:);
gradc_q = reshape(gradc_q,[size(gradc_q,1)*size(gradc_q,2),size(gradc_q,3)]);

gradc_u = gradc(p.numJ+1:2*p.numJ,:,:);
gradc_u = reshape(gradc_u,[size(gradc_u,1)*size(gradc_u,2),size(gradc_u,3)]);
gradc_u(1:p.numJ,:) = gradc_u(1:p.numJ,:)+p.map_A2*gradc_u(end-p.numJ+1:end,:);
gradc_u = gradc_u(1:end-p.numJ,:);

gradc_f1 = gradc([2*p.numJ+1,2*p.numJ+3],1:p.phase1_idx,:);
gradc_f1 = reshape(gradc_f1,[size(gradc_f1,1)*size(gradc_f1,2),size(gradc_f1,3)]);
gradc_f2 = gradc(2*p.numJ+1:2*p.numJ+2,p.phase2_idx:end,:);
gradc_f2 = reshape(gradc_f2,[size(gradc_f2,1)*size(gradc_f2,2),size(gradc_f2,3)]);

gradc = [gradc_q;gradc_u;gradc_f1;gradc_f2];


ceq = [];
gradceq=[];


end